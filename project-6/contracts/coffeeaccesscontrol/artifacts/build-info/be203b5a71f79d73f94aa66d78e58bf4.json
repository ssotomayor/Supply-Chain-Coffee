{
	"id": "be203b5a71f79d73f94aa66d78e58bf4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.12",
	"solcLongVersion": "0.5.12+commit.7709ece9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/coffeeaccesscontrol/DistributorRole.sol": {
				"content": "pragma solidity ^0.5.12;\n\n// Import the library 'Roles'\nimport \"./Roles.sol\";\n\n// Define a contract 'DistributorRole' to manage this role - add, remove, check\ncontract DistributorRole {\n\n  // Define 2 events, one for Adding, and other for Removing\n  event DistributorAdded(address indexed account);\n  event DistributorRemoved(address indexed account);\n\n  // Define a struct 'distributors' by inheriting from 'Roles' library, struct Role\n  using Roles for Roles.Role;\n  Roles.Role private distributors;\n\n  // In the constructor make the address that deploys this contract the 1st distributor\n  constructor() public {\n    _addDistributor(msg.sender);\n  }\n\n  // Define a modifier that checks to see if msg.sender has the appropriate role\n  modifier onlyDistributor() {\n    require(isDistributor(msg.sender), \"Only a distributor can call this function.\");\n    _;\n  }\n\n  // Define a function 'isDistributor' to check this role\n  function isDistributor(address account) public view returns (bool) {\n    distributors.has(account);\n  }\n\n  // Define a function 'addDistributor' that adds this role\n  function addDistributor(address account) public onlyDistributor {\n    _addDistributor(account);\n  }\n\n  // Define a function 'renounceDistributor' to renounce this role\n  function renounceDistributor() public {\n    _removeDistributor(msg.sender);\n  }\n\n  // Define an internal function '_addDistributor' to add this role, called by 'addDistributor'\n  function _addDistributor(address account) internal {\n    distributors.add(account);\n    emit DistributorAdded(account);\n  }\n\n  function getAllDistributors() public view returns (address[] memory) {\n    return distributors.getAllMembers();\n  }\n\n  // Define an internal function '_removeDistributor' to remove this role, called by 'removeDistributor'\n  function _removeDistributor(address account) internal {\n    distributors.remove(account);\n    emit DistributorRemoved(account);\n  }\n}"
			},
			"contracts/coffeeaccesscontrol/Roles.sol": {
				"content": "pragma solidity ^0.5.12;\n\n/**\n * @title Roles\n * @dev Library for managing addresses assigned to a Role.\n */\nlibrary Roles {\n  struct Role {\n    mapping (address => bool) bearer;\n  }\n\n  /**\n   * @dev give an account access to this role\n   */\n  function add(Role storage role, address account) internal {\n    require(account != address(0), \"Account is 0 address\");\n    require(!has(role, account));\n\n    role.bearer[account] = true;\n  }\n\n  /**\n   * @dev remove an account's access to this role\n   */\n  function remove(Role storage role, address account) internal {\n    require(account != address(0));\n    require(has(role, account));\n\n    role.bearer[account] = false;\n  }\n\n  /**\n   * @dev check if an account has this role\n   * @return bool\n   */\n  function has(Role storage role, address account)\n    internal\n    view\n    returns (bool)\n  {\n    require(account != address(0));\n    return role.bearer[account];\n  }\n\n  function getAllMembers(Role storage role)\n    internal\n    view\n    returns (address[] memory)\n  {\n    uint256 count = 0;\n    for (uint256 i = 0; i < 256; i++) {\n      if (role.bearer[address(i)]) {\n        count++;\n      }\n    }\n\n    address[] memory members = new address[](count);\n    uint256 index = 0;\n    for (uint256 ix = 0; ix < 256; ix++) {\n      if (role.bearer[address(ix)]) {\n        members[index] = address(ix);\n        index++;\n      }\n    }\n\n    return members;\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/coffeeaccesscontrol/DistributorRole.sol": {
				"DistributorRole": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "DistributorAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "DistributorRemoved",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addDistributor",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getAllDistributors",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isDistributor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceDistributor",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":159:1924  contract DistributorRole {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":593:652  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":593:652  constructor() public {... */\n  pop\n    /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":620:647  _addDistributor(msg.sender) */\n  tag_4\n    /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":636:646  msg.sender */\n  caller\n    /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":620:635  _addDistributor */\n  shl(0x20, tag_5)\n    /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":620:647  _addDistributor(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":159:1924  contract DistributorRole {... */\n  jump(tag_6)\n    /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1440:1563  function _addDistributor(address account) internal {... */\ntag_5:\n    /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1497:1522  distributors.add(account) */\n  tag_8\n    /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1514:1521  account */\n  dup2\n    /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1497:1509  distributors */\n  0x00\n    /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1497:1513  distributors.add */\n  or(tag_0_40, shl(0x20, tag_9))\n  swap1\n    /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1497:1522  distributors.add(account) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1550:1557  account */\n  dup1\n    /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1533:1558  DistributorAdded(account) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddbf200aa634dc3fb81cfd68583dd1040d1c751d335e1d86b631bde3e977fea8\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1440:1563  function _addDistributor(address account) internal {... */\n  pop\n  jump\t// out\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":244:435  function add(Role storage role, address account) internal {... */\ntag_9:\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":335:336  0 */\n  0x00\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":316:337  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":316:323  account */\n  dup2\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":316:337  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":308:362  require(account != address(0), \"Account is 0 address\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x14\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x4163636f756e7420697320302061646472657373000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":377:395  has(role, account) */\n  tag_12\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":381:385  role */\n  dup3\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":387:394  account */\n  dup3\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":377:380  has */\n  shl(0x20, tag_13)\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":377:395  has(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":376:395  !has(role, account) */\n  iszero\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":368:396  require(!has(role, account)) */\n  tag_14\n  jumpi\n  0x00\n  dup1\n  revert\ntag_14:\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":426:430  true */\n  0x01\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":403:407  role */\n  dup3\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":403:414  role.bearer */\n  0x00\n  add\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":403:423  role.bearer[account] */\n  0x00\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":415:422  account */\n  dup4\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":403:423  role.bearer[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":403:430  role.bearer[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":244:435  function add(Role storage role, address account) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":749:915  function has(Role storage role, address account)... */\ntag_13:\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":833:837  bool */\n  0x00\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":874:875  0 */\n  dup1\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":855:876  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":855:862  account */\n  dup3\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":855:876  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":847:877  require(account != address(0)) */\n  tag_16\n  jumpi\n  0x00\n  dup1\n  revert\ntag_16:\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":890:894  role */\n  dup3\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":890:901  role.bearer */\n  0x00\n  add\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":890:910  role.bearer[account] */\n  0x00\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":902:909  account */\n  dup4\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":890:910  role.bearer[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":883:910  return role.bearer[account] */\n  swap1\n  pop\n    /* \"contracts/coffeeaccesscontrol/Roles.sol\":749:915  function has(Role storage role, address account)... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":159:1924  contract DistributorRole {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":159:1924  contract DistributorRole {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":159:1924  contract DistributorRole {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x644241db\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7250e224\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8e24c34b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8f0c86fa\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1261:1340  function renounceDistributor() public {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1091:1190  function addDistributor(address account) public onlyDistributor {... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_10:\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1091:1190  function addDistributor(address account) public onlyDistributor {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_11\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1567:1682  function getAllDistributors() public view returns (address[] memory) {... */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_14:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_14)\n    tag_16:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1567:1682  function getAllDistributors() public view returns (address[] memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":924:1027  function isDistributor(address account) public view returns (bool) {... */\n    tag_6:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_18:\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":924:1027  function isDistributor(address account) public view returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_19\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1261:1340  function renounceDistributor() public {... */\n    tag_8:\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1305:1335  _removeDistributor(msg.sender) */\n      tag_21\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1324:1334  msg.sender */\n      caller\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1305:1323  _removeDistributor */\n      tag_22\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1305:1335  _removeDistributor(msg.sender) */\n      jump\t// in\n    tag_21:\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1261:1340  function renounceDistributor() public {... */\n      jump\t// out\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1091:1190  function addDistributor(address account) public onlyDistributor {... */\n    tag_11:\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":778:803  isDistributor(msg.sender) */\n      tag_24\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":792:802  msg.sender */\n      caller\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":778:791  isDistributor */\n      tag_19\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":778:803  isDistributor(msg.sender) */\n      jump\t// in\n    tag_24:\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":770:850  require(isDistributor(msg.sender), \"Only a distributor can call this function.\") */\n      tag_25\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_d4fa28ebc6c1c07b8b28cc8da1429dbf7b893b203aa1eb11aa2f29c11f0f7b6a\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1161:1185  _addDistributor(account) */\n      tag_27\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1177:1184  account */\n      dup2\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1161:1176  _addDistributor */\n      tag_28\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1161:1185  _addDistributor(account) */\n      jump\t// in\n    tag_27:\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1091:1190  function addDistributor(address account) public onlyDistributor {... */\n      pop\n      jump\t// out\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1567:1682  function getAllDistributors() public view returns (address[] memory) {... */\n    tag_13:\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1618:1634  address[] memory */\n      0x60\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1649:1677  distributors.getAllMembers() */\n      tag_30\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1649:1661  distributors */\n      0x00\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1649:1675  distributors.getAllMembers */\n      tag_31\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1649:1677  distributors.getAllMembers() */\n      jump\t// in\n    tag_30:\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1642:1677  return distributors.getAllMembers() */\n      swap1\n      pop\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1567:1682  function getAllDistributors() public view returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":924:1027  function isDistributor(address account) public view returns (bool) {... */\n    tag_19:\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":985:989  bool */\n      0x00\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":997:1022  distributors.has(account) */\n      tag_33\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1014:1021  account */\n      dup3\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":997:1009  distributors */\n      0x00\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":997:1013  distributors.has */\n      tag_34\n      swap1\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":997:1022  distributors.has(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_33:\n      pop\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":924:1027  function isDistributor(address account) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1791:1922  function _removeDistributor(address account) internal {... */\n    tag_22:\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1851:1879  distributors.remove(account) */\n      tag_36\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1871:1878  account */\n      dup2\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1851:1863  distributors */\n      0x00\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1851:1870  distributors.remove */\n      tag_37\n      swap1\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1851:1879  distributors.remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_36:\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1909:1916  account */\n      dup1\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1890:1917  DistributorRemoved(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x126174f6cf49c81cdb4a9214c6b8f037bef55b4ec31e4fc776cea2a1c8a88d59\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1791:1922  function _removeDistributor(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1440:1563  function _addDistributor(address account) internal {... */\n    tag_28:\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1497:1522  distributors.add(account) */\n      tag_39\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1514:1521  account */\n      dup2\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1497:1509  distributors */\n      0x00\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1497:1513  distributors.add */\n      tag_40\n      swap1\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1497:1522  distributors.add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_39:\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1550:1557  account */\n      dup1\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1533:1558  DistributorAdded(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddbf200aa634dc3fb81cfd68583dd1040d1c751d335e1d86b631bde3e977fea8\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/coffeeaccesscontrol/DistributorRole.sol\":1440:1563  function _addDistributor(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":919:1400  function getAllMembers(Role storage role)... */\n    tag_31:\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":996:1012  address[] memory */\n      0x60\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1022:1035  uint256 count */\n      0x00\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1038:1039  0 */\n      dup1\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1022:1039  uint256 count = 0 */\n      swap1\n      pop\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1050:1059  uint256 i */\n      0x00\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1062:1063  0 */\n      dup1\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1050:1063  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1045:1148  for (uint256 i = 0; i < 256; i++) {... */\n    tag_42:\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1069:1072  256 */\n      0x0100\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1065:1066  i */\n      dup2\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1065:1072  i < 256 */\n      lt\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1045:1148  for (uint256 i = 0; i < 256; i++) {... */\n      iszero\n      tag_43\n      jumpi\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1091:1095  role */\n      dup4\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1091:1102  role.bearer */\n      0x00\n      add\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1091:1114  role.bearer[address(i)] */\n      0x00\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1111:1112  i */\n      dup3\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1091:1114  role.bearer[address(i)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1087:1142  if (role.bearer[address(i)]) {... */\n      iszero\n      tag_45\n      jumpi\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1126:1133  count++ */\n      dup2\n      dup1\n      0x01\n      add\n      swap3\n      pop\n      pop\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1087:1142  if (role.bearer[address(i)]) {... */\n    tag_45:\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1074:1077  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1045:1148  for (uint256 i = 0; i < 256; i++) {... */\n      jump(tag_42)\n    tag_43:\n      pop\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1154:1178  address[] memory members */\n      0x60\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1195:1200  count */\n      dup2\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1181:1201  new address[](count) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_46\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1181:1201  new address[](count) */\n      swap1\n      pop\n    tag_46:\n      pop\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1154:1201  address[] memory members = new address[](count) */\n      swap1\n      pop\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1207:1220  uint256 index */\n      0x00\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1223:1224  0 */\n      dup1\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1207:1224  uint256 index = 0 */\n      swap1\n      pop\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1235:1245  uint256 ix */\n      0x00\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1248:1249  0 */\n      dup1\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1235:1249  uint256 ix = 0 */\n      swap1\n      pop\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1230:1375  for (uint256 ix = 0; ix < 256; ix++) {... */\n    tag_47:\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1256:1259  256 */\n      0x0100\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1251:1253  ix */\n      dup2\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1251:1259  ix < 256 */\n      lt\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1230:1375  for (uint256 ix = 0; ix < 256; ix++) {... */\n      iszero\n      tag_48\n      jumpi\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1279:1283  role */\n      dup6\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1279:1290  role.bearer */\n      0x00\n      add\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1279:1303  role.bearer[address(ix)] */\n      0x00\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1299:1301  ix */\n      dup3\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1279:1303  role.bearer[address(ix)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1275:1369  if (role.bearer[address(ix)]) {... */\n      iszero\n      tag_50\n      jumpi\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1340:1342  ix */\n      dup1\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1315:1322  members */\n      dup4\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1323:1328  index */\n      dup4\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1315:1329  members[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_51\n      jumpi\n      invalid\n    tag_51:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1315:1343  members[index] = address(ix) */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1353:1360  index++ */\n      dup2\n      dup1\n      0x01\n      add\n      swap3\n      pop\n      pop\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1275:1369  if (role.bearer[address(ix)]) {... */\n    tag_50:\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1261:1265  ix++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1230:1375  for (uint256 ix = 0; ix < 256; ix++) {... */\n      jump(tag_47)\n    tag_48:\n      pop\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1388:1395  members */\n      dup2\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":1381:1395  return members */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":919:1400  function getAllMembers(Role storage role)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":749:915  function has(Role storage role, address account)... */\n    tag_34:\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":833:837  bool */\n      0x00\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":874:875  0 */\n      dup1\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":855:876  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":855:862  account */\n      dup3\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":855:876  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":847:877  require(account != address(0)) */\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":890:894  role */\n      dup3\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":890:901  role.bearer */\n      0x00\n      add\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":890:910  role.bearer[account] */\n      0x00\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":902:909  account */\n      dup4\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":890:910  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":883:910  return role.bearer[account] */\n      swap1\n      pop\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":749:915  function has(Role storage role, address account)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":501:671  function remove(Role storage role, address account) internal {... */\n    tag_37:\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":595:596  0 */\n      0x00\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":576:597  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":576:583  account */\n      dup2\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":576:597  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":568:598  require(account != address(0)) */\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":612:630  has(role, account) */\n      tag_56\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":616:620  role */\n      dup3\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":622:629  account */\n      dup3\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":612:615  has */\n      tag_34\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":612:630  has(role, account) */\n      jump\t// in\n    tag_56:\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":604:631  require(has(role, account)) */\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":661:666  false */\n      0x00\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":638:642  role */\n      dup3\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":638:649  role.bearer */\n      0x00\n      add\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":638:658  role.bearer[account] */\n      0x00\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":650:657  account */\n      dup4\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":638:658  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":638:666  role.bearer[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":501:671  function remove(Role storage role, address account) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":244:435  function add(Role storage role, address account) internal {... */\n    tag_40:\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":335:336  0 */\n      0x00\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":316:337  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":316:323  account */\n      dup2\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":316:337  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":308:362  require(account != address(0), \"Account is 0 address\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4163636f756e7420697320302061646472657373000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":377:395  has(role, account) */\n      tag_60\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":381:385  role */\n      dup3\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":387:394  account */\n      dup3\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":377:380  has */\n      tag_34\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":377:395  has(role, account) */\n      jump\t// in\n    tag_60:\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":376:395  !has(role, account) */\n      iszero\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":368:396  require(!has(role, account)) */\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":426:430  true */\n      0x01\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":403:407  role */\n      dup3\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":403:414  role.bearer */\n      0x00\n      add\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":403:423  role.bearer[account] */\n      0x00\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":415:422  account */\n      dup4\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":403:423  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":403:430  role.bearer[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":244:435  function add(Role storage role, address account) internal {... */\n      pop\n      pop\n      jump\t// out\n    stop\n    data_d4fa28ebc6c1c07b8b28cc8da1429dbf7b893b203aa1eb11aa2f29c11f0f7b6a 4f6e6c792061206469737472696275746f722063616e2063616c6c20746869732066756e6374696f6e2e\n\n    auxdata: 0xa265627a7a72315820e4189c1fecceeebd49a6a588f05934c249ade96ccaac34b03bbba50ae53a6e1964736f6c634300050c0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506100203361002560201b60201c565b610230565b61003d81600061008360201b6105751790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167fddbf200aa634dc3fb81cfd68583dd1040d1c751d335e1d86b631bde3e977fea860405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610126576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4163636f756e742069732030206164647265737300000000000000000000000081525060200191505060405180910390fd5b610136828261019e60201b60201c565b1561014057600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156101d957600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6106e98061023f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063644241db146100515780637250e2241461005b5780638e24c34b1461009f5780638f0c86fa146100fe575b600080fd5b61005961015a565b005b61009d6004803603602081101561007157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610165565b005b6100a76101cf565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156100ea5780820151818401526020810190506100cf565b505050509050019250505060405180910390f35b6101406004803603602081101561011457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101e0565b604051808215151515815260200191505060405180910390f35b610163336101fc565b565b61016e336101e0565b6101c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061068b602a913960400191505060405180910390fd5b6101cc81610256565b50565b60606101db60006102b0565b905090565b60006101f682600061043890919063ffffffff16565b50919050565b6102108160006104ca90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f126174f6cf49c81cdb4a9214c6b8f037bef55b4ec31e4fc776cea2a1c8a88d5960405160405180910390a250565b61026a81600061057590919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fddbf200aa634dc3fb81cfd68583dd1040d1c751d335e1d86b631bde3e977fea860405160405180910390a250565b6060600080905060008090505b610100811015610331578360000160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156103245781806001019250505b80806001019150506102bd565b506060816040519080825280602002602001820160405280156103635781602001602082028038833980820191505090505b509050600080905060008090505b61010081101561042c578560000160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561041f57808383815181106103dc57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081806001019250505b8080600101915050610371565b50819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561047357600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561050457600080fd5b61050e8282610438565b61051757600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610618576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4163636f756e742069732030206164647265737300000000000000000000000081525060200191505060405180910390fd5b6106228282610438565b1561062c57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe4f6e6c792061206469737472696275746f722063616e2063616c6c20746869732066756e6374696f6e2ea265627a7a72315820e4189c1fecceeebd49a6a588f05934c249ade96ccaac34b03bbba50ae53a6e1964736f6c634300050c0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20 CALLER PUSH2 0x25 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x230 JUMP JUMPDEST PUSH2 0x3D DUP2 PUSH1 0x0 PUSH2 0x83 PUSH1 0x20 SHL PUSH2 0x575 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDBF200AA634DC3FB81CFD68583DD1040D1C751D335E1D86B631BDE3E977FEA8 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x126 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4163636F756E7420697320302061646472657373000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x136 DUP3 DUP3 PUSH2 0x19E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6E9 DUP1 PUSH2 0x23F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x644241DB EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x7250E224 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8E24C34B EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x8F0C86FA EQ PUSH2 0xFE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x15A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x165 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA7 PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCF JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 CALLER PUSH2 0x1FC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x16E CALLER PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x1C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x68B PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CC DUP2 PUSH2 0x256 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1DB PUSH1 0x0 PUSH2 0x2B0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F6 DUP3 PUSH1 0x0 PUSH2 0x438 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x210 DUP2 PUSH1 0x0 PUSH2 0x4CA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x126174F6CF49C81CDB4A9214C6B8F037BEF55B4EC31E4FC776CEA2A1C8A88D59 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x26A DUP2 PUSH1 0x0 PUSH2 0x575 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDBF200AA634DC3FB81CFD68583DD1040D1C751D335E1D86B631BDE3E977FEA8 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x331 JUMPI DUP4 PUSH1 0x0 ADD PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x324 JUMPI DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2BD JUMP JUMPDEST POP PUSH1 0x60 DUP2 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x363 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x42C JUMPI DUP6 PUSH1 0x0 ADD PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x41F JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3DC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x371 JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x50E DUP3 DUP3 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4163636F756E7420697320302061646472657373000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x622 DUP3 DUP3 PUSH2 0x438 JUMP JUMPDEST ISZERO PUSH2 0x62C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP INVALID 0x4f PUSH15 0x6C792061206469737472696275746F PUSH19 0x2063616E2063616C6C20746869732066756E63 PUSH21 0x696F6E2EA265627A7A72315820E4189C1FECCEEEBD 0x49 0xa6 0xa5 DUP9 CREATE MSIZE CALLVALUE 0xc2 0x49 0xad 0xe9 PUSH13 0xCAAC34B03BBBA50AE53A6E1964 PUSH20 0x6F6C634300050C00320000000000000000000000 ",
							"sourceMap": "159:1765:0:-;;;593:59;8:9:-1;5:2;;;30:1;27;20:12;5:2;593:59:0;620:27;636:10;620:15;;;:27;;:::i;:::-;159:1765;;1440:123;1497:25;1514:7;1497:12;:16;;;;;;:25;;;;:::i;:::-;1550:7;1533:25;;;;;;;;;;;;1440:123;:::o;244:191:1:-;335:1;316:21;;:7;:21;;;;308:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;377:18;381:4;387:7;377:3;;;:18;;:::i;:::-;376:19;368:28;;;;;;426:4;403;:11;;:20;415:7;403:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;244:191;;:::o;749:166::-;833:4;874:1;855:21;;:7;:21;;;;847:30;;;;;;890:4;:11;;:20;902:7;890:20;;;;;;;;;;;;;;;;;;;;;;;;;883:27;;749:166;;;;:::o;159:1765:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063644241db146100515780637250e2241461005b5780638e24c34b1461009f5780638f0c86fa146100fe575b600080fd5b61005961015a565b005b61009d6004803603602081101561007157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610165565b005b6100a76101cf565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156100ea5780820151818401526020810190506100cf565b505050509050019250505060405180910390f35b6101406004803603602081101561011457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101e0565b604051808215151515815260200191505060405180910390f35b610163336101fc565b565b61016e336101e0565b6101c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061068b602a913960400191505060405180910390fd5b6101cc81610256565b50565b60606101db60006102b0565b905090565b60006101f682600061043890919063ffffffff16565b50919050565b6102108160006104ca90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f126174f6cf49c81cdb4a9214c6b8f037bef55b4ec31e4fc776cea2a1c8a88d5960405160405180910390a250565b61026a81600061057590919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fddbf200aa634dc3fb81cfd68583dd1040d1c751d335e1d86b631bde3e977fea860405160405180910390a250565b6060600080905060008090505b610100811015610331578360000160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156103245781806001019250505b80806001019150506102bd565b506060816040519080825280602002602001820160405280156103635781602001602082028038833980820191505090505b509050600080905060008090505b61010081101561042c578560000160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561041f57808383815181106103dc57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081806001019250505b8080600101915050610371565b50819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561047357600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561050457600080fd5b61050e8282610438565b61051757600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610618576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4163636f756e742069732030206164647265737300000000000000000000000081525060200191505060405180910390fd5b6106228282610438565b1561062c57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe4f6e6c792061206469737472696275746f722063616e2063616c6c20746869732066756e6374696f6e2ea265627a7a72315820e4189c1fecceeebd49a6a588f05934c249ade96ccaac34b03bbba50ae53a6e1964736f6c634300050c0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x644241DB EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x7250E224 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8E24C34B EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x8F0C86FA EQ PUSH2 0xFE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x15A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x165 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA7 PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCF JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 CALLER PUSH2 0x1FC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x16E CALLER PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x1C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x68B PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CC DUP2 PUSH2 0x256 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1DB PUSH1 0x0 PUSH2 0x2B0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F6 DUP3 PUSH1 0x0 PUSH2 0x438 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x210 DUP2 PUSH1 0x0 PUSH2 0x4CA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x126174F6CF49C81CDB4A9214C6B8F037BEF55B4EC31E4FC776CEA2A1C8A88D59 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x26A DUP2 PUSH1 0x0 PUSH2 0x575 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDBF200AA634DC3FB81CFD68583DD1040D1C751D335E1D86B631BDE3E977FEA8 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x331 JUMPI DUP4 PUSH1 0x0 ADD PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x324 JUMPI DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2BD JUMP JUMPDEST POP PUSH1 0x60 DUP2 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x363 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x42C JUMPI DUP6 PUSH1 0x0 ADD PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x41F JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3DC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x371 JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x50E DUP3 DUP3 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4163636F756E7420697320302061646472657373000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x622 DUP3 DUP3 PUSH2 0x438 JUMP JUMPDEST ISZERO PUSH2 0x62C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP INVALID 0x4f PUSH15 0x6C792061206469737472696275746F PUSH19 0x2063616E2063616C6C20746869732066756E63 PUSH21 0x696F6E2EA265627A7A72315820E4189C1FECCEEEBD 0x49 0xa6 0xa5 DUP9 CREATE MSIZE CALLVALUE 0xc2 0x49 0xad 0xe9 PUSH13 0xCAAC34B03BBBA50AE53A6E1964 PUSH20 0x6F6C634300050C00320000000000000000000000 ",
							"sourceMap": "159:1765:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;159:1765:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1261:79;;;:::i;:::-;;1091:99;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1091:99:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1567:115;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1567:115:0;;;;;;;;;;;;;;;;;924:103;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;924:103:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1261:79;1305:30;1324:10;1305:18;:30::i;:::-;1261:79::o;1091:99::-;778:25;792:10;778:13;:25::i;:::-;770:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1161:24;1177:7;1161:15;:24::i;:::-;1091:99;:::o;1567:115::-;1618:16;1649:28;:12;:26;:28::i;:::-;1642:35;;1567:115;:::o;924:103::-;985:4;997:25;1014:7;997:12;:16;;:25;;;;:::i;:::-;;924:103;;;:::o;1791:131::-;1851:28;1871:7;1851:12;:19;;:28;;;;:::i;:::-;1909:7;1890:27;;;;;;;;;;;;1791:131;:::o;1440:123::-;1497:25;1514:7;1497:12;:16;;:25;;;;:::i;:::-;1550:7;1533:25;;;;;;;;;;;;1440:123;:::o;919:481:1:-;996:16;1022:13;1038:1;1022:17;;1050:9;1062:1;1050:13;;1045:103;1069:3;1065:1;:7;1045:103;;;1091:4;:11;;:23;1111:1;1091:23;;;;;;;;;;;;;;;;;;;;;;;;;1087:55;;;1126:7;;;;;;;1087:55;1074:3;;;;;;;1045:103;;;;1154:24;1195:5;1181:20;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1181:20:1;;;;1154:47;;1207:13;1223:1;1207:17;;1235:10;1248:1;1235:14;;1230:145;1256:3;1251:2;:8;1230:145;;;1279:4;:11;;:24;1299:2;1279:24;;;;;;;;;;;;;;;;;;;;;;;;;1275:94;;;1340:2;1315:7;1323:5;1315:14;;;;;;;;;;;;;:28;;;;;;;;;;;1353:7;;;;;;;1275:94;1261:4;;;;;;;1230:145;;;;1388:7;1381:14;;;;;919:481;;;:::o;749:166::-;833:4;874:1;855:21;;:7;:21;;;;847:30;;;;;;890:4;:11;;:20;902:7;890:20;;;;;;;;;;;;;;;;;;;;;;;;;883:27;;749:166;;;;:::o;501:170::-;595:1;576:21;;:7;:21;;;;568:30;;;;;;612:18;616:4;622:7;612:3;:18::i;:::-;604:27;;;;;;661:5;638:4;:11;;:20;650:7;638:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;501:170;;:::o;244:191::-;335:1;316:21;;:7;:21;;;;308:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;377:18;381:4;387:7;377:3;:18::i;:::-;376:19;368:28;;;;;;426:4;403;:11;;:20;415:7;403:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;244:191;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "353800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addDistributor(address)": "infinite",
								"getAllDistributors()": "infinite",
								"isDistributor(address)": "infinite",
								"renounceDistributor()": "infinite"
							},
							"internal": {
								"_addDistributor(address)": "infinite",
								"_removeDistributor(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 159,
									"end": 1924,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 159,
									"end": 1924,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 159,
									"end": 1924,
									"name": "MSTORE"
								},
								{
									"begin": 593,
									"end": 652,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 593,
									"end": 652,
									"name": "POP"
								},
								{
									"begin": 620,
									"end": 647,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 636,
									"end": 646,
									"name": "CALLER"
								},
								{
									"begin": 620,
									"end": 635,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 620,
									"end": 635,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 620,
									"end": 635,
									"name": "SHL"
								},
								{
									"begin": 620,
									"end": 647,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 620,
									"end": 647,
									"name": "SHR"
								},
								{
									"begin": 620,
									"end": 647,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 620,
									"end": 647,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 620,
									"end": 647,
									"name": "JUMPDEST"
								},
								{
									"begin": 159,
									"end": 1924,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 159,
									"end": 1924,
									"name": "JUMP"
								},
								{
									"begin": 1440,
									"end": 1563,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 1440,
									"end": 1563,
									"name": "JUMPDEST"
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 1514,
									"end": 1521,
									"name": "DUP2"
								},
								{
									"begin": 1497,
									"end": 1509,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1497,
									"end": 1513,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 1497,
									"end": 1513,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1497,
									"end": 1513,
									"name": "SHL"
								},
								{
									"begin": 1497,
									"end": 1513,
									"name": "PUSH [tag]",
									"value": "18446744073709551656"
								},
								{
									"begin": 1497,
									"end": 1513,
									"name": "OR"
								},
								{
									"begin": 1497,
									"end": 1513,
									"name": "SWAP1"
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "SWAP2"
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "SWAP1"
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "SHR"
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "JUMPDEST"
								},
								{
									"begin": 1550,
									"end": 1557,
									"name": "DUP1"
								},
								{
									"begin": 1533,
									"end": 1558,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1533,
									"end": 1558,
									"name": "AND"
								},
								{
									"begin": 1533,
									"end": 1558,
									"name": "PUSH",
									"value": "DDBF200AA634DC3FB81CFD68583DD1040D1C751D335E1D86B631BDE3E977FEA8"
								},
								{
									"begin": 1533,
									"end": 1558,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1533,
									"end": 1558,
									"name": "MLOAD"
								},
								{
									"begin": 1533,
									"end": 1558,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1533,
									"end": 1558,
									"name": "MLOAD"
								},
								{
									"begin": 1533,
									"end": 1558,
									"name": "DUP1"
								},
								{
									"begin": 1533,
									"end": 1558,
									"name": "SWAP2"
								},
								{
									"begin": 1533,
									"end": 1558,
									"name": "SUB"
								},
								{
									"begin": 1533,
									"end": 1558,
									"name": "SWAP1"
								},
								{
									"begin": 1533,
									"end": 1558,
									"name": "LOG2"
								},
								{
									"begin": 1440,
									"end": 1563,
									"name": "POP"
								},
								{
									"begin": 1440,
									"end": 1563,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 244,
									"end": 435,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 244,
									"end": 435,
									"name": "JUMPDEST"
								},
								{
									"begin": 335,
									"end": 336,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 316,
									"end": 337,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 316,
									"end": 337,
									"name": "AND"
								},
								{
									"begin": 316,
									"end": 323,
									"name": "DUP2"
								},
								{
									"begin": 316,
									"end": 337,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 316,
									"end": 337,
									"name": "AND"
								},
								{
									"begin": 316,
									"end": 337,
									"name": "EQ"
								},
								{
									"begin": 316,
									"end": 337,
									"name": "ISZERO"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "JUMPI"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "MLOAD"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "DUP2"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "MSTORE"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "ADD"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "DUP1"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "DUP1"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "ADD"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "DUP3"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "DUP2"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "SUB"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "DUP3"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "MSTORE"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "DUP2"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "MSTORE"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "ADD"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "DUP1"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "PUSH",
									"value": "4163636F756E7420697320302061646472657373000000000000000000000000"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "DUP2"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "MSTORE"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "POP"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "ADD"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "SWAP2"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "POP"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "POP"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "MLOAD"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "DUP1"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "SWAP2"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "SUB"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "SWAP1"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "REVERT"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 308,
									"end": 362,
									"name": "JUMPDEST"
								},
								{
									"begin": 377,
									"end": 395,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 381,
									"end": 385,
									"name": "DUP3"
								},
								{
									"begin": 387,
									"end": 394,
									"name": "DUP3"
								},
								{
									"begin": 377,
									"end": 380,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 377,
									"end": 380,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 377,
									"end": 380,
									"name": "SHL"
								},
								{
									"begin": 377,
									"end": 395,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 377,
									"end": 395,
									"name": "SHR"
								},
								{
									"begin": 377,
									"end": 395,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 377,
									"end": 395,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 377,
									"end": 395,
									"name": "JUMPDEST"
								},
								{
									"begin": 376,
									"end": 395,
									"name": "ISZERO"
								},
								{
									"begin": 368,
									"end": 396,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 368,
									"end": 396,
									"name": "JUMPI"
								},
								{
									"begin": 368,
									"end": 396,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 368,
									"end": 396,
									"name": "DUP1"
								},
								{
									"begin": 368,
									"end": 396,
									"name": "REVERT"
								},
								{
									"begin": 368,
									"end": 396,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 368,
									"end": 396,
									"name": "JUMPDEST"
								},
								{
									"begin": 426,
									"end": 430,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 403,
									"end": 407,
									"name": "DUP3"
								},
								{
									"begin": 403,
									"end": 414,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 403,
									"end": 414,
									"name": "ADD"
								},
								{
									"begin": 403,
									"end": 423,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 415,
									"end": 422,
									"name": "DUP4"
								},
								{
									"begin": 403,
									"end": 423,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 403,
									"end": 423,
									"name": "AND"
								},
								{
									"begin": 403,
									"end": 423,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 403,
									"end": 423,
									"name": "AND"
								},
								{
									"begin": 403,
									"end": 423,
									"name": "DUP2"
								},
								{
									"begin": 403,
									"end": 423,
									"name": "MSTORE"
								},
								{
									"begin": 403,
									"end": 423,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 403,
									"end": 423,
									"name": "ADD"
								},
								{
									"begin": 403,
									"end": 423,
									"name": "SWAP1"
								},
								{
									"begin": 403,
									"end": 423,
									"name": "DUP2"
								},
								{
									"begin": 403,
									"end": 423,
									"name": "MSTORE"
								},
								{
									"begin": 403,
									"end": 423,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 403,
									"end": 423,
									"name": "ADD"
								},
								{
									"begin": 403,
									"end": 423,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 403,
									"end": 423,
									"name": "KECCAK256"
								},
								{
									"begin": 403,
									"end": 423,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 403,
									"end": 430,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 403,
									"end": 430,
									"name": "EXP"
								},
								{
									"begin": 403,
									"end": 430,
									"name": "DUP2"
								},
								{
									"begin": 403,
									"end": 430,
									"name": "SLOAD"
								},
								{
									"begin": 403,
									"end": 430,
									"name": "DUP2"
								},
								{
									"begin": 403,
									"end": 430,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 403,
									"end": 430,
									"name": "MUL"
								},
								{
									"begin": 403,
									"end": 430,
									"name": "NOT"
								},
								{
									"begin": 403,
									"end": 430,
									"name": "AND"
								},
								{
									"begin": 403,
									"end": 430,
									"name": "SWAP1"
								},
								{
									"begin": 403,
									"end": 430,
									"name": "DUP4"
								},
								{
									"begin": 403,
									"end": 430,
									"name": "ISZERO"
								},
								{
									"begin": 403,
									"end": 430,
									"name": "ISZERO"
								},
								{
									"begin": 403,
									"end": 430,
									"name": "MUL"
								},
								{
									"begin": 403,
									"end": 430,
									"name": "OR"
								},
								{
									"begin": 403,
									"end": 430,
									"name": "SWAP1"
								},
								{
									"begin": 403,
									"end": 430,
									"name": "SSTORE"
								},
								{
									"begin": 403,
									"end": 430,
									"name": "POP"
								},
								{
									"begin": 244,
									"end": 435,
									"name": "POP"
								},
								{
									"begin": 244,
									"end": 435,
									"name": "POP"
								},
								{
									"begin": 244,
									"end": 435,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 749,
									"end": 915,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 749,
									"end": 915,
									"name": "JUMPDEST"
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 874,
									"end": 875,
									"name": "DUP1"
								},
								{
									"begin": 855,
									"end": 876,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 855,
									"end": 876,
									"name": "AND"
								},
								{
									"begin": 855,
									"end": 862,
									"name": "DUP3"
								},
								{
									"begin": 855,
									"end": 876,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 855,
									"end": 876,
									"name": "AND"
								},
								{
									"begin": 855,
									"end": 876,
									"name": "EQ"
								},
								{
									"begin": 855,
									"end": 876,
									"name": "ISZERO"
								},
								{
									"begin": 847,
									"end": 877,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 847,
									"end": 877,
									"name": "JUMPI"
								},
								{
									"begin": 847,
									"end": 877,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 847,
									"end": 877,
									"name": "DUP1"
								},
								{
									"begin": 847,
									"end": 877,
									"name": "REVERT"
								},
								{
									"begin": 847,
									"end": 877,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 847,
									"end": 877,
									"name": "JUMPDEST"
								},
								{
									"begin": 890,
									"end": 894,
									"name": "DUP3"
								},
								{
									"begin": 890,
									"end": 901,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 890,
									"end": 901,
									"name": "ADD"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 902,
									"end": 909,
									"name": "DUP4"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "AND"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "AND"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "DUP2"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "MSTORE"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "ADD"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "SWAP1"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "DUP2"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "MSTORE"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "ADD"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "KECCAK256"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "SWAP1"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "SLOAD"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "SWAP1"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "EXP"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "SWAP1"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "DIV"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 890,
									"end": 910,
									"name": "AND"
								},
								{
									"begin": 883,
									"end": 910,
									"name": "SWAP1"
								},
								{
									"begin": 883,
									"end": 910,
									"name": "POP"
								},
								{
									"begin": 749,
									"end": 915,
									"name": "SWAP3"
								},
								{
									"begin": 749,
									"end": 915,
									"name": "SWAP2"
								},
								{
									"begin": 749,
									"end": 915,
									"name": "POP"
								},
								{
									"begin": 749,
									"end": 915,
									"name": "POP"
								},
								{
									"begin": 749,
									"end": 915,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 159,
									"end": 1924,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 159,
									"end": 1924,
									"name": "JUMPDEST"
								},
								{
									"begin": 159,
									"end": 1924,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 159,
									"end": 1924,
									"name": "DUP1"
								},
								{
									"begin": 159,
									"end": 1924,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 159,
									"end": 1924,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 159,
									"end": 1924,
									"name": "CODECOPY"
								},
								{
									"begin": 159,
									"end": 1924,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 159,
									"end": 1924,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820e4189c1fecceeebd49a6a588f05934c249ade96ccaac34b03bbba50ae53a6e1964736f6c634300050c0032",
									".code": [
										{
											"begin": 159,
											"end": 1924,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "MSTORE"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "POP"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "LT"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "JUMPI"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "SHR"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "DUP1"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "PUSH",
											"value": "644241DB"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "EQ"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "JUMPI"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "DUP1"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "PUSH",
											"value": "7250E224"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "EQ"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "JUMPI"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "DUP1"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "PUSH",
											"value": "8E24C34B"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "EQ"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "JUMPI"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "DUP1"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "PUSH",
											"value": "8F0C86FA"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "EQ"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "JUMPI"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "JUMPDEST"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "DUP1"
										},
										{
											"begin": 159,
											"end": 1924,
											"name": "REVERT"
										},
										{
											"begin": 1261,
											"end": 1340,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1261,
											"end": 1340,
											"name": "JUMPDEST"
										},
										{
											"begin": 1261,
											"end": 1340,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1261,
											"end": 1340,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1261,
											"end": 1340,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1261,
											"end": 1340,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1261,
											"end": 1340,
											"name": "JUMPDEST"
										},
										{
											"begin": 1261,
											"end": 1340,
											"name": "STOP"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "JUMPDEST"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "DUP1"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "DUP2"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "ADD"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "SWAP1"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "DUP1"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "DUP1"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "AND"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "SWAP1"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "ADD"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "SWAP1"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "SWAP3"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "SWAP2"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "SWAP1"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "POP"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "POP"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "POP"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "JUMPDEST"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "STOP"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "JUMPDEST"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "JUMPDEST"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "MLOAD"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "DUP1"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "DUP1"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "ADD"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "DUP3"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "DUP2"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "SUB"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "DUP3"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "MSTORE"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "DUP4"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "DUP2"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "DUP2"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "MLOAD"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "DUP2"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "MSTORE"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "ADD"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "SWAP2"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "POP"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "DUP1"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "MLOAD"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "SWAP1"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "ADD"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "SWAP1"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "MUL"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "DUP1"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "DUP4"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "POP"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "POP"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "POP"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "SWAP1"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "POP"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "ADD"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "SWAP3"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "POP"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "POP"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "POP"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "MLOAD"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "DUP1"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "SWAP2"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "SUB"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "SWAP1"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "RETURN"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "JUMPDEST"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "DUP1"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "DUP2"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "ADD"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "SWAP1"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "DUP1"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "DUP1"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "AND"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "SWAP1"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "ADD"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "SWAP1"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "SWAP3"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "SWAP2"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "SWAP1"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "POP"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "POP"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "POP"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "JUMPDEST"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "MLOAD"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "DUP1"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "DUP3"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "ISZERO"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "ISZERO"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "ISZERO"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "ISZERO"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "DUP2"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "MSTORE"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "ADD"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "SWAP2"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "POP"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "POP"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "MLOAD"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "DUP1"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "SWAP2"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "SUB"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "SWAP1"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "RETURN"
										},
										{
											"begin": 1261,
											"end": 1340,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1261,
											"end": 1340,
											"name": "JUMPDEST"
										},
										{
											"begin": 1305,
											"end": 1335,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1324,
											"end": 1334,
											"name": "CALLER"
										},
										{
											"begin": 1305,
											"end": 1323,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1305,
											"end": 1335,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1305,
											"end": 1335,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1305,
											"end": 1335,
											"name": "JUMPDEST"
										},
										{
											"begin": 1261,
											"end": 1340,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "JUMPDEST"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 792,
											"end": 802,
											"name": "CALLER"
										},
										{
											"begin": 778,
											"end": 791,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "JUMPDEST"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "JUMPI"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "MLOAD"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "DUP2"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "DUP1"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "DUP1"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "DUP3"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "DUP2"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "SUB"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "DUP3"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "DUP2"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "DUP1"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "PUSH data",
											"value": "D4FA28EBC6C1C07B8B28CC8DA1429DBF7B893B203AA1EB11AA2F29C11F0F7B6A"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "SWAP2"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "CODECOPY"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "SWAP2"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "MLOAD"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "DUP1"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "SWAP2"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "SUB"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "REVERT"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 770,
											"end": 850,
											"name": "JUMPDEST"
										},
										{
											"begin": 1161,
											"end": 1185,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1177,
											"end": 1184,
											"name": "DUP2"
										},
										{
											"begin": 1161,
											"end": 1176,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1161,
											"end": 1185,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1161,
											"end": 1185,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1161,
											"end": 1185,
											"name": "JUMPDEST"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "POP"
										},
										{
											"begin": 1091,
											"end": 1190,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "JUMPDEST"
										},
										{
											"begin": 1618,
											"end": 1634,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1649,
											"end": 1677,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1649,
											"end": 1661,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1649,
											"end": 1677,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1649,
											"end": 1677,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1649,
											"end": 1677,
											"name": "JUMPDEST"
										},
										{
											"begin": 1642,
											"end": 1677,
											"name": "SWAP1"
										},
										{
											"begin": 1642,
											"end": 1677,
											"name": "POP"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "SWAP1"
										},
										{
											"begin": 1567,
											"end": 1682,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "JUMPDEST"
										},
										{
											"begin": 985,
											"end": 989,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1022,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1014,
											"end": 1021,
											"name": "DUP3"
										},
										{
											"begin": 997,
											"end": 1009,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1013,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 997,
											"end": 1013,
											"name": "SWAP1"
										},
										{
											"begin": 997,
											"end": 1022,
											"name": "SWAP2"
										},
										{
											"begin": 997,
											"end": 1022,
											"name": "SWAP1"
										},
										{
											"begin": 997,
											"end": 1022,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 997,
											"end": 1022,
											"name": "AND"
										},
										{
											"begin": 997,
											"end": 1022,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1022,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 997,
											"end": 1022,
											"name": "JUMPDEST"
										},
										{
											"begin": 997,
											"end": 1022,
											"name": "POP"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "SWAP2"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "SWAP1"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "POP"
										},
										{
											"begin": 924,
											"end": 1027,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1791,
											"end": 1922,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1791,
											"end": 1922,
											"name": "JUMPDEST"
										},
										{
											"begin": 1851,
											"end": 1879,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1871,
											"end": 1878,
											"name": "DUP2"
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "SWAP1"
										},
										{
											"begin": 1851,
											"end": 1879,
											"name": "SWAP2"
										},
										{
											"begin": 1851,
											"end": 1879,
											"name": "SWAP1"
										},
										{
											"begin": 1851,
											"end": 1879,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1851,
											"end": 1879,
											"name": "AND"
										},
										{
											"begin": 1851,
											"end": 1879,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 1879,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1851,
											"end": 1879,
											"name": "JUMPDEST"
										},
										{
											"begin": 1909,
											"end": 1916,
											"name": "DUP1"
										},
										{
											"begin": 1890,
											"end": 1917,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1890,
											"end": 1917,
											"name": "AND"
										},
										{
											"begin": 1890,
											"end": 1917,
											"name": "PUSH",
											"value": "126174F6CF49C81CDB4A9214C6B8F037BEF55B4EC31E4FC776CEA2A1C8A88D59"
										},
										{
											"begin": 1890,
											"end": 1917,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1890,
											"end": 1917,
											"name": "MLOAD"
										},
										{
											"begin": 1890,
											"end": 1917,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1890,
											"end": 1917,
											"name": "MLOAD"
										},
										{
											"begin": 1890,
											"end": 1917,
											"name": "DUP1"
										},
										{
											"begin": 1890,
											"end": 1917,
											"name": "SWAP2"
										},
										{
											"begin": 1890,
											"end": 1917,
											"name": "SUB"
										},
										{
											"begin": 1890,
											"end": 1917,
											"name": "SWAP1"
										},
										{
											"begin": 1890,
											"end": 1917,
											"name": "LOG2"
										},
										{
											"begin": 1791,
											"end": 1922,
											"name": "POP"
										},
										{
											"begin": 1791,
											"end": 1922,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1440,
											"end": 1563,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1440,
											"end": 1563,
											"name": "JUMPDEST"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "DUP2"
										},
										{
											"begin": 1497,
											"end": 1509,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1513,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1497,
											"end": 1513,
											"name": "SWAP1"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "SWAP2"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "SWAP1"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "AND"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "JUMPDEST"
										},
										{
											"begin": 1550,
											"end": 1557,
											"name": "DUP1"
										},
										{
											"begin": 1533,
											"end": 1558,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1533,
											"end": 1558,
											"name": "AND"
										},
										{
											"begin": 1533,
											"end": 1558,
											"name": "PUSH",
											"value": "DDBF200AA634DC3FB81CFD68583DD1040D1C751D335E1D86B631BDE3E977FEA8"
										},
										{
											"begin": 1533,
											"end": 1558,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1558,
											"name": "MLOAD"
										},
										{
											"begin": 1533,
											"end": 1558,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1558,
											"name": "MLOAD"
										},
										{
											"begin": 1533,
											"end": 1558,
											"name": "DUP1"
										},
										{
											"begin": 1533,
											"end": 1558,
											"name": "SWAP2"
										},
										{
											"begin": 1533,
											"end": 1558,
											"name": "SUB"
										},
										{
											"begin": 1533,
											"end": 1558,
											"name": "SWAP1"
										},
										{
											"begin": 1533,
											"end": 1558,
											"name": "LOG2"
										},
										{
											"begin": 1440,
											"end": 1563,
											"name": "POP"
										},
										{
											"begin": 1440,
											"end": 1563,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 919,
											"end": 1400,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 919,
											"end": 1400,
											"name": "JUMPDEST"
										},
										{
											"begin": 996,
											"end": 1012,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1022,
											"end": 1035,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1039,
											"name": "DUP1"
										},
										{
											"begin": 1022,
											"end": 1039,
											"name": "SWAP1"
										},
										{
											"begin": 1022,
											"end": 1039,
											"name": "POP"
										},
										{
											"begin": 1050,
											"end": 1059,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1062,
											"end": 1063,
											"name": "DUP1"
										},
										{
											"begin": 1050,
											"end": 1063,
											"name": "SWAP1"
										},
										{
											"begin": 1050,
											"end": 1063,
											"name": "POP"
										},
										{
											"begin": 1045,
											"end": 1148,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1045,
											"end": 1148,
											"name": "JUMPDEST"
										},
										{
											"begin": 1069,
											"end": 1072,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1065,
											"end": 1066,
											"name": "DUP2"
										},
										{
											"begin": 1065,
											"end": 1072,
											"name": "LT"
										},
										{
											"begin": 1045,
											"end": 1148,
											"name": "ISZERO"
										},
										{
											"begin": 1045,
											"end": 1148,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1045,
											"end": 1148,
											"name": "JUMPI"
										},
										{
											"begin": 1091,
											"end": 1095,
											"name": "DUP4"
										},
										{
											"begin": 1091,
											"end": 1102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1102,
											"name": "ADD"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1112,
											"name": "DUP3"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "AND"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "AND"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "DUP2"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "MSTORE"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "ADD"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "SWAP1"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "DUP2"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "MSTORE"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "ADD"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "KECCAK256"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "SWAP1"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "SLOAD"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "SWAP1"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "EXP"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "SWAP1"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "DIV"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "AND"
										},
										{
											"begin": 1087,
											"end": 1142,
											"name": "ISZERO"
										},
										{
											"begin": 1087,
											"end": 1142,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1087,
											"end": 1142,
											"name": "JUMPI"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "DUP2"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "DUP1"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "ADD"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "SWAP3"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "POP"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "POP"
										},
										{
											"begin": 1087,
											"end": 1142,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1087,
											"end": 1142,
											"name": "JUMPDEST"
										},
										{
											"begin": 1074,
											"end": 1077,
											"name": "DUP1"
										},
										{
											"begin": 1074,
											"end": 1077,
											"name": "DUP1"
										},
										{
											"begin": 1074,
											"end": 1077,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1074,
											"end": 1077,
											"name": "ADD"
										},
										{
											"begin": 1074,
											"end": 1077,
											"name": "SWAP2"
										},
										{
											"begin": 1074,
											"end": 1077,
											"name": "POP"
										},
										{
											"begin": 1074,
											"end": 1077,
											"name": "POP"
										},
										{
											"begin": 1045,
											"end": 1148,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1045,
											"end": 1148,
											"name": "JUMP"
										},
										{
											"begin": 1045,
											"end": 1148,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 1045,
											"end": 1148,
											"name": "JUMPDEST"
										},
										{
											"begin": 1045,
											"end": 1148,
											"name": "POP"
										},
										{
											"begin": 1154,
											"end": 1178,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1195,
											"end": 1200,
											"name": "DUP2"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "MLOAD"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "SWAP1"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "DUP1"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "DUP3"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "MSTORE"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "DUP1"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "MUL"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "ADD"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "DUP3"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "ADD"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "MSTORE"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "DUP1"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "ISZERO"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "JUMPI"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "DUP2"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "SWAP1"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "POP"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "JUMPDEST"
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "POP"
										},
										{
											"begin": 1154,
											"end": 1201,
											"name": "SWAP1"
										},
										{
											"begin": 1154,
											"end": 1201,
											"name": "POP"
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1224,
											"name": "DUP1"
										},
										{
											"begin": 1207,
											"end": 1224,
											"name": "SWAP1"
										},
										{
											"begin": 1207,
											"end": 1224,
											"name": "POP"
										},
										{
											"begin": 1235,
											"end": 1245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1249,
											"name": "DUP1"
										},
										{
											"begin": 1235,
											"end": 1249,
											"name": "SWAP1"
										},
										{
											"begin": 1235,
											"end": 1249,
											"name": "POP"
										},
										{
											"begin": 1230,
											"end": 1375,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1230,
											"end": 1375,
											"name": "JUMPDEST"
										},
										{
											"begin": 1256,
											"end": 1259,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1251,
											"end": 1253,
											"name": "DUP2"
										},
										{
											"begin": 1251,
											"end": 1259,
											"name": "LT"
										},
										{
											"begin": 1230,
											"end": 1375,
											"name": "ISZERO"
										},
										{
											"begin": 1230,
											"end": 1375,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1230,
											"end": 1375,
											"name": "JUMPI"
										},
										{
											"begin": 1279,
											"end": 1283,
											"name": "DUP6"
										},
										{
											"begin": 1279,
											"end": 1290,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1290,
											"name": "ADD"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1301,
											"name": "DUP3"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "AND"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "AND"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "DUP2"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "MSTORE"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "ADD"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "SWAP1"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "DUP2"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "MSTORE"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "ADD"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "KECCAK256"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "SWAP1"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "SLOAD"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "SWAP1"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "EXP"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "SWAP1"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "DIV"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1279,
											"end": 1303,
											"name": "AND"
										},
										{
											"begin": 1275,
											"end": 1369,
											"name": "ISZERO"
										},
										{
											"begin": 1275,
											"end": 1369,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1275,
											"end": 1369,
											"name": "JUMPI"
										},
										{
											"begin": 1340,
											"end": 1342,
											"name": "DUP1"
										},
										{
											"begin": 1315,
											"end": 1322,
											"name": "DUP4"
										},
										{
											"begin": 1323,
											"end": 1328,
											"name": "DUP4"
										},
										{
											"begin": 1315,
											"end": 1329,
											"name": "DUP2"
										},
										{
											"begin": 1315,
											"end": 1329,
											"name": "MLOAD"
										},
										{
											"begin": 1315,
											"end": 1329,
											"name": "DUP2"
										},
										{
											"begin": 1315,
											"end": 1329,
											"name": "LT"
										},
										{
											"begin": 1315,
											"end": 1329,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 1315,
											"end": 1329,
											"name": "JUMPI"
										},
										{
											"begin": 1315,
											"end": 1329,
											"name": "INVALID"
										},
										{
											"begin": 1315,
											"end": 1329,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 1315,
											"end": 1329,
											"name": "JUMPDEST"
										},
										{
											"begin": 1315,
											"end": 1329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1329,
											"name": "MUL"
										},
										{
											"begin": 1315,
											"end": 1329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1329,
											"name": "ADD"
										},
										{
											"begin": 1315,
											"end": 1329,
											"name": "ADD"
										},
										{
											"begin": 1315,
											"end": 1343,
											"name": "SWAP1"
										},
										{
											"begin": 1315,
											"end": 1343,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1315,
											"end": 1343,
											"name": "AND"
										},
										{
											"begin": 1315,
											"end": 1343,
											"name": "SWAP1"
										},
										{
											"begin": 1315,
											"end": 1343,
											"name": "DUP2"
										},
										{
											"begin": 1315,
											"end": 1343,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1315,
											"end": 1343,
											"name": "AND"
										},
										{
											"begin": 1315,
											"end": 1343,
											"name": "DUP2"
										},
										{
											"begin": 1315,
											"end": 1343,
											"name": "MSTORE"
										},
										{
											"begin": 1315,
											"end": 1343,
											"name": "POP"
										},
										{
											"begin": 1315,
											"end": 1343,
											"name": "POP"
										},
										{
											"begin": 1353,
											"end": 1360,
											"name": "DUP2"
										},
										{
											"begin": 1353,
											"end": 1360,
											"name": "DUP1"
										},
										{
											"begin": 1353,
											"end": 1360,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1353,
											"end": 1360,
											"name": "ADD"
										},
										{
											"begin": 1353,
											"end": 1360,
											"name": "SWAP3"
										},
										{
											"begin": 1353,
											"end": 1360,
											"name": "POP"
										},
										{
											"begin": 1353,
											"end": 1360,
											"name": "POP"
										},
										{
											"begin": 1275,
											"end": 1369,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 1275,
											"end": 1369,
											"name": "JUMPDEST"
										},
										{
											"begin": 1261,
											"end": 1265,
											"name": "DUP1"
										},
										{
											"begin": 1261,
											"end": 1265,
											"name": "DUP1"
										},
										{
											"begin": 1261,
											"end": 1265,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1261,
											"end": 1265,
											"name": "ADD"
										},
										{
											"begin": 1261,
											"end": 1265,
											"name": "SWAP2"
										},
										{
											"begin": 1261,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1261,
											"end": 1265,
											"name": "POP"
										},
										{
											"begin": 1230,
											"end": 1375,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1230,
											"end": 1375,
											"name": "JUMP"
										},
										{
											"begin": 1230,
											"end": 1375,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1230,
											"end": 1375,
											"name": "JUMPDEST"
										},
										{
											"begin": 1230,
											"end": 1375,
											"name": "POP"
										},
										{
											"begin": 1388,
											"end": 1395,
											"name": "DUP2"
										},
										{
											"begin": 1381,
											"end": 1395,
											"name": "SWAP4"
										},
										{
											"begin": 1381,
											"end": 1395,
											"name": "POP"
										},
										{
											"begin": 1381,
											"end": 1395,
											"name": "POP"
										},
										{
											"begin": 1381,
											"end": 1395,
											"name": "POP"
										},
										{
											"begin": 1381,
											"end": 1395,
											"name": "POP"
										},
										{
											"begin": 919,
											"end": 1400,
											"name": "SWAP2"
										},
										{
											"begin": 919,
											"end": 1400,
											"name": "SWAP1"
										},
										{
											"begin": 919,
											"end": 1400,
											"name": "POP"
										},
										{
											"begin": 919,
											"end": 1400,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 749,
											"end": 915,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 749,
											"end": 915,
											"name": "JUMPDEST"
										},
										{
											"begin": 833,
											"end": 837,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 874,
											"end": 875,
											"name": "DUP1"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "AND"
										},
										{
											"begin": 855,
											"end": 862,
											"name": "DUP3"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "AND"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "EQ"
										},
										{
											"begin": 855,
											"end": 876,
											"name": "ISZERO"
										},
										{
											"begin": 847,
											"end": 877,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 847,
											"end": 877,
											"name": "JUMPI"
										},
										{
											"begin": 847,
											"end": 877,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 847,
											"end": 877,
											"name": "DUP1"
										},
										{
											"begin": 847,
											"end": 877,
											"name": "REVERT"
										},
										{
											"begin": 847,
											"end": 877,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 847,
											"end": 877,
											"name": "JUMPDEST"
										},
										{
											"begin": 890,
											"end": 894,
											"name": "DUP3"
										},
										{
											"begin": 890,
											"end": 901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 890,
											"end": 901,
											"name": "ADD"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP4"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "AND"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "AND"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "DUP2"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "MSTORE"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "ADD"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "SWAP1"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "DUP2"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "MSTORE"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "ADD"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "KECCAK256"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "SWAP1"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "SLOAD"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "SWAP1"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "EXP"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "SWAP1"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "DIV"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 890,
											"end": 910,
											"name": "AND"
										},
										{
											"begin": 883,
											"end": 910,
											"name": "SWAP1"
										},
										{
											"begin": 883,
											"end": 910,
											"name": "POP"
										},
										{
											"begin": 749,
											"end": 915,
											"name": "SWAP3"
										},
										{
											"begin": 749,
											"end": 915,
											"name": "SWAP2"
										},
										{
											"begin": 749,
											"end": 915,
											"name": "POP"
										},
										{
											"begin": 749,
											"end": 915,
											"name": "POP"
										},
										{
											"begin": 749,
											"end": 915,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 501,
											"end": 671,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 501,
											"end": 671,
											"name": "JUMPDEST"
										},
										{
											"begin": 595,
											"end": 596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 576,
											"end": 597,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 576,
											"end": 597,
											"name": "AND"
										},
										{
											"begin": 576,
											"end": 583,
											"name": "DUP2"
										},
										{
											"begin": 576,
											"end": 597,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 576,
											"end": 597,
											"name": "AND"
										},
										{
											"begin": 576,
											"end": 597,
											"name": "EQ"
										},
										{
											"begin": 576,
											"end": 597,
											"name": "ISZERO"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "JUMPI"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "DUP1"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "REVERT"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "JUMPDEST"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 616,
											"end": 620,
											"name": "DUP3"
										},
										{
											"begin": 622,
											"end": 629,
											"name": "DUP3"
										},
										{
											"begin": 612,
											"end": 615,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "JUMPDEST"
										},
										{
											"begin": 604,
											"end": 631,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 604,
											"end": 631,
											"name": "JUMPI"
										},
										{
											"begin": 604,
											"end": 631,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 604,
											"end": 631,
											"name": "DUP1"
										},
										{
											"begin": 604,
											"end": 631,
											"name": "REVERT"
										},
										{
											"begin": 604,
											"end": 631,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 604,
											"end": 631,
											"name": "JUMPDEST"
										},
										{
											"begin": 661,
											"end": 666,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 638,
											"end": 642,
											"name": "DUP3"
										},
										{
											"begin": 638,
											"end": 649,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 638,
											"end": 649,
											"name": "ADD"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 650,
											"end": 657,
											"name": "DUP4"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "AND"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "AND"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "DUP2"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "MSTORE"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "ADD"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "SWAP1"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "DUP2"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "MSTORE"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "ADD"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "KECCAK256"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 638,
											"end": 666,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 638,
											"end": 666,
											"name": "EXP"
										},
										{
											"begin": 638,
											"end": 666,
											"name": "DUP2"
										},
										{
											"begin": 638,
											"end": 666,
											"name": "SLOAD"
										},
										{
											"begin": 638,
											"end": 666,
											"name": "DUP2"
										},
										{
											"begin": 638,
											"end": 666,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 638,
											"end": 666,
											"name": "MUL"
										},
										{
											"begin": 638,
											"end": 666,
											"name": "NOT"
										},
										{
											"begin": 638,
											"end": 666,
											"name": "AND"
										},
										{
											"begin": 638,
											"end": 666,
											"name": "SWAP1"
										},
										{
											"begin": 638,
											"end": 666,
											"name": "DUP4"
										},
										{
											"begin": 638,
											"end": 666,
											"name": "ISZERO"
										},
										{
											"begin": 638,
											"end": 666,
											"name": "ISZERO"
										},
										{
											"begin": 638,
											"end": 666,
											"name": "MUL"
										},
										{
											"begin": 638,
											"end": 666,
											"name": "OR"
										},
										{
											"begin": 638,
											"end": 666,
											"name": "SWAP1"
										},
										{
											"begin": 638,
											"end": 666,
											"name": "SSTORE"
										},
										{
											"begin": 638,
											"end": 666,
											"name": "POP"
										},
										{
											"begin": 501,
											"end": 671,
											"name": "POP"
										},
										{
											"begin": 501,
											"end": 671,
											"name": "POP"
										},
										{
											"begin": 501,
											"end": 671,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 244,
											"end": 435,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 244,
											"end": 435,
											"name": "JUMPDEST"
										},
										{
											"begin": 335,
											"end": 336,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 316,
											"end": 337,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 316,
											"end": 337,
											"name": "AND"
										},
										{
											"begin": 316,
											"end": 323,
											"name": "DUP2"
										},
										{
											"begin": 316,
											"end": 337,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 316,
											"end": 337,
											"name": "AND"
										},
										{
											"begin": 316,
											"end": 337,
											"name": "EQ"
										},
										{
											"begin": 316,
											"end": 337,
											"name": "ISZERO"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "JUMPI"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "MLOAD"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "DUP2"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "MSTORE"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "ADD"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "DUP1"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "DUP1"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "ADD"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "DUP3"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "DUP2"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "SUB"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "DUP3"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "MSTORE"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "DUP2"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "MSTORE"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "ADD"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "DUP1"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "PUSH",
											"value": "4163636F756E7420697320302061646472657373000000000000000000000000"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "DUP2"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "MSTORE"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "POP"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "ADD"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "SWAP2"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "POP"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "POP"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "MLOAD"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "DUP1"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "SWAP2"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "SUB"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "SWAP1"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "REVERT"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 308,
											"end": 362,
											"name": "JUMPDEST"
										},
										{
											"begin": 377,
											"end": 395,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 381,
											"end": 385,
											"name": "DUP3"
										},
										{
											"begin": 387,
											"end": 394,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 380,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 377,
											"end": 395,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 377,
											"end": 395,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 377,
											"end": 395,
											"name": "JUMPDEST"
										},
										{
											"begin": 376,
											"end": 395,
											"name": "ISZERO"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "JUMPI"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "REVERT"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "JUMPDEST"
										},
										{
											"begin": 426,
											"end": 430,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 403,
											"end": 407,
											"name": "DUP3"
										},
										{
											"begin": 403,
											"end": 414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 403,
											"end": 414,
											"name": "ADD"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 415,
											"end": 422,
											"name": "DUP4"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "AND"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "AND"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "DUP2"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "MSTORE"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "ADD"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "SWAP1"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "DUP2"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "MSTORE"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "ADD"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "KECCAK256"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 403,
											"end": 430,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 403,
											"end": 430,
											"name": "EXP"
										},
										{
											"begin": 403,
											"end": 430,
											"name": "DUP2"
										},
										{
											"begin": 403,
											"end": 430,
											"name": "SLOAD"
										},
										{
											"begin": 403,
											"end": 430,
											"name": "DUP2"
										},
										{
											"begin": 403,
											"end": 430,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 403,
											"end": 430,
											"name": "MUL"
										},
										{
											"begin": 403,
											"end": 430,
											"name": "NOT"
										},
										{
											"begin": 403,
											"end": 430,
											"name": "AND"
										},
										{
											"begin": 403,
											"end": 430,
											"name": "SWAP1"
										},
										{
											"begin": 403,
											"end": 430,
											"name": "DUP4"
										},
										{
											"begin": 403,
											"end": 430,
											"name": "ISZERO"
										},
										{
											"begin": 403,
											"end": 430,
											"name": "ISZERO"
										},
										{
											"begin": 403,
											"end": 430,
											"name": "MUL"
										},
										{
											"begin": 403,
											"end": 430,
											"name": "OR"
										},
										{
											"begin": 403,
											"end": 430,
											"name": "SWAP1"
										},
										{
											"begin": 403,
											"end": 430,
											"name": "SSTORE"
										},
										{
											"begin": 403,
											"end": 430,
											"name": "POP"
										},
										{
											"begin": 244,
											"end": 435,
											"name": "POP"
										},
										{
											"begin": 244,
											"end": 435,
											"name": "POP"
										},
										{
											"begin": 244,
											"end": 435,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"D4FA28EBC6C1C07B8B28CC8DA1429DBF7B893B203AA1EB11AA2F29C11F0F7B6A": "4f6e6c792061206469737472696275746f722063616e2063616c6c20746869732066756e6374696f6e2e"
									}
								}
							}
						},
						"methodIdentifiers": {
							"addDistributor(address)": "7250e224",
							"getAllDistributors()": "8e24c34b",
							"isDistributor(address)": "8f0c86fa",
							"renounceDistributor()": "644241db"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"DistributorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"DistributorRemoved\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addDistributor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllDistributors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isDistributor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceDistributor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/coffeeaccesscontrol/DistributorRole.sol\":\"DistributorRole\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/coffeeaccesscontrol/DistributorRole.sol\":{\"keccak256\":\"0xee5cd5302468c4b9b17f80e4230da8ef436eddfc0ee2d98da85264340dfca1ce\",\"urls\":[\"bzz-raw://40c47d4cbab16b702842c24e76db92ad184326ee08feef840526b0ba1c21a460\",\"dweb:/ipfs/QmV4WB6sqEioZULK7gJaskWveU6ppaiMtPHNSog4uYQaPZ\"]},\"contracts/coffeeaccesscontrol/Roles.sol\":{\"keccak256\":\"0x95c27c0387f1b49047f91d46a813821184b5d5d080816e8c2d5e7427e5d3aab6\",\"urls\":[\"bzz-raw://caca555e630dcfe871a7d6664ad6933b21d9381b3de98e7a75c10c3c83a7522d\",\"dweb:/ipfs/QmapZJcaMRmcKmL8pHxTE1L6uEmsAG7KDYAoPJrSWwFgiz\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/coffeeaccesscontrol/Roles.sol": {
				"Roles": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing addresses assigned to a Role.",
						"methods": {},
						"title": "Roles"
					},
					"evm": {
						"assembly": "    /* \"contracts/coffeeaccesscontrol/Roles.sol\":109:1402  library Roles {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/coffeeaccesscontrol/Roles.sol\":109:1402  library Roles {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158204a933ee1262a829c52449f8da4dddfe05ac8d1ef40fbce0f92a9964e5676d7f064736f6c634300050c0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158204a933ee1262a829c52449f8da4dddfe05ac8d1ef40fbce0f92a9964e5676d7f064736f6c634300050c0032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x4a SWAP4 RETURNDATACOPY 0xe1 0x26 0x2a DUP3 SWAP13 MSTORE DIFFICULTY SWAP16 DUP14 LOG4 0xdd 0xdf 0xe0 GAS 0xc8 0xd1 0xef BLOCKHASH 0xfb 0xce 0xf SWAP3 0xa9 SWAP7 0x4e JUMP PUSH23 0xD7F064736F6C634300050C003200000000000000000000 ",
							"sourceMap": "109:1293:1:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158204a933ee1262a829c52449f8da4dddfe05ac8d1ef40fbce0f92a9964e5676d7f064736f6c634300050c0032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x4a SWAP4 RETURNDATACOPY 0xe1 0x26 0x2a DUP3 SWAP13 MSTORE DIFFICULTY SWAP16 DUP14 LOG4 0xdd 0xdf 0xe0 GAS 0xc8 0xd1 0xef BLOCKHASH 0xfb 0xce 0xf SWAP3 0xa9 SWAP7 0x4e JUMP PUSH23 0xD7F064736F6C634300050C003200000000000000000000 ",
							"sourceMap": "109:1293:1:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(struct Roles.Role storage pointer,address)": "infinite",
								"getAllMembers(struct Roles.Role storage pointer)": "infinite",
								"has(struct Roles.Role storage pointer,address)": "infinite",
								"remove(struct Roles.Role storage pointer,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 109,
									"end": 1402,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 1402,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158204a933ee1262a829c52449f8da4dddfe05ac8d1ef40fbce0f92a9964e5676d7f064736f6c634300050c0032",
									".code": [
										{
											"begin": 109,
											"end": 1402,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 109,
											"end": 1402,
											"name": "ADDRESS"
										},
										{
											"begin": 109,
											"end": 1402,
											"name": "EQ"
										},
										{
											"begin": 109,
											"end": 1402,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 109,
											"end": 1402,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 109,
											"end": 1402,
											"name": "MSTORE"
										},
										{
											"begin": 109,
											"end": 1402,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 109,
											"end": 1402,
											"name": "DUP1"
										},
										{
											"begin": 109,
											"end": 1402,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing addresses assigned to a Role.\",\"methods\":{},\"title\":\"Roles\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/coffeeaccesscontrol/Roles.sol\":\"Roles\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/coffeeaccesscontrol/Roles.sol\":{\"keccak256\":\"0x95c27c0387f1b49047f91d46a813821184b5d5d080816e8c2d5e7427e5d3aab6\",\"urls\":[\"bzz-raw://caca555e630dcfe871a7d6664ad6933b21d9381b3de98e7a75c10c3c83a7522d\",\"dweb:/ipfs/QmapZJcaMRmcKmL8pHxTE1L6uEmsAG7KDYAoPJrSWwFgiz\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/coffeeaccesscontrol/DistributorRole.sol": {
				"ast": {
					"absolutePath": "contracts/coffeeaccesscontrol/DistributorRole.sol",
					"exportedSymbols": {
						"DistributorRole": [
							115
						]
					},
					"id": 116,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"absolutePath": "contracts/coffeeaccesscontrol/Roles.sol",
							"file": "./Roles.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 116,
							"sourceUnit": 294,
							"src": "56:21:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 115,
							"linearizedBaseContracts": [
								115
							],
							"name": "DistributorRole",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 6,
									"name": "DistributorAdded",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"indexed": true,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "273:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "273:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "272:25:0"
									},
									"src": "250:48:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 10,
									"name": "DistributorRemoved",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "326:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "325:25:0"
									},
									"src": "301:50:0"
								},
								{
									"id": 13,
									"libraryName": {
										"contractScope": null,
										"id": 11,
										"name": "Roles",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 293,
										"src": "445:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Roles_$293",
											"typeString": "library Roles"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "439:27:0",
									"typeName": {
										"contractScope": null,
										"id": 12,
										"name": "Roles.Role",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 122,
										"src": "455:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$122_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									}
								},
								{
									"constant": false,
									"id": 15,
									"name": "distributors",
									"nodeType": "VariableDeclaration",
									"scope": 115,
									"src": "469:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Role_$122_storage",
										"typeString": "struct Roles.Role"
									},
									"typeName": {
										"contractScope": null,
										"id": 14,
										"name": "Roles.Role",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 122,
										"src": "469:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$122_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "614:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 19,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "636:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "636:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 18,
														"name": "_addDistributor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "620:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "620:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "620:27:0"
											}
										]
									},
									"documentation": null,
									"id": 24,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "604:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "614:0:0"
									},
									"scope": 115,
									"src": "593:59:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "764:98:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 28,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "792:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "792:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 27,
																"name": "isDistributor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "778:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "778:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f6e6c792061206469737472696275746f722063616e2063616c6c20746869732066756e6374696f6e2e",
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "805:44:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4fa28ebc6c1c07b8b28cc8da1429dbf7b893b203aa1eb11aa2f29c11f0f7b6a",
																"typeString": "literal_string \"Only a distributor can call this function.\""
															},
															"value": "Only a distributor can call this function."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4fa28ebc6c1c07b8b28cc8da1429dbf7b893b203aa1eb11aa2f29c11f0f7b6a",
																"typeString": "literal_string \"Only a distributor can call this function.\""
															}
														],
														"id": 26,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															311,
															312
														],
														"referencedDeclaration": 312,
														"src": "770:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "770:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "770:80:0"
											},
											{
												"id": 34,
												"nodeType": "PlaceholderStatement",
												"src": "856:1:0"
											}
										]
									},
									"documentation": null,
									"id": 36,
									"name": "onlyDistributor",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "761:2:0"
									},
									"src": "737:125:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "991:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 46,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "1014:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 43,
															"name": "distributors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "997:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$122_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 45,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "has",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 209,
														"src": "997:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$122_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$122_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "997:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "997:25:0"
											}
										]
									},
									"documentation": null,
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isDistributor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "947:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "947:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "946:17:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "985:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 40,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "985:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "984:6:0"
									},
									"scope": 115,
									"src": "924:103:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1155:35:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 58,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "1177:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 57,
														"name": "_addDistributor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "1161:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1161:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1161:24:0"
											}
										]
									},
									"documentation": null,
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 55,
											"modifierName": {
												"argumentTypes": null,
												"id": 54,
												"name": "onlyDistributor",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 36,
												"src": "1139:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1139:15:0"
										}
									],
									"name": "addDistributor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1115:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1115:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1114:17:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1155:0:0"
									},
									"scope": 115,
									"src": "1091:99:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "1299:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 66,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "1324:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1324:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 65,
														"name": "_removeDistributor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "1305:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1305:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "1305:30:0"
											}
										]
									},
									"documentation": null,
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceDistributor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:2:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1299:0:0"
									},
									"scope": 115,
									"src": "1261:79:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "1491:72:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 79,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "1514:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 76,
															"name": "distributors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1497:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$122_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 78,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 155,
														"src": "1497:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$122_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$122_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1497:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "1497:25:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 83,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "1550:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 82,
														"name": "DistributorAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "1533:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1533:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "EmitStatement",
												"src": "1528:30:0"
											}
										]
									},
									"documentation": null,
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addDistributor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1465:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1464:17:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1491:0:0"
									},
									"scope": 115,
									"src": "1440:123:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "1636:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 93,
															"name": "distributors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1649:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$122_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 94,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getAllMembers",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "1649:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$122_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$bound_to$_t_struct$_Role_$122_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer) view returns (address[] memory)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1649:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 92,
												"id": 96,
												"nodeType": "Return",
												"src": "1642:35:0"
											}
										]
									},
									"documentation": null,
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllDistributors",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1594:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1618:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 89,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1618:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 90,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1618:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1617:18:0"
									},
									"scope": 115,
									"src": "1567:115:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "1845:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 106,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "1871:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 103,
															"name": "distributors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1851:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$122_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 186,
														"src": "1851:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$122_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$122_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1851:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1851:28:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 110,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "1909:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 109,
														"name": "DistributorRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1890:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1890:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 112,
												"nodeType": "EmitStatement",
												"src": "1885:32:0"
											}
										]
									},
									"documentation": null,
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeDistributor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1819:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1819:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1818:17:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1845:0:0"
									},
									"scope": 115,
									"src": "1791:131:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 116,
							"src": "159:1765:0"
						}
					],
					"src": "0:1924:0"
				},
				"id": 0
			},
			"contracts/coffeeaccesscontrol/Roles.sol": {
				"ast": {
					"absolutePath": "contracts/coffeeaccesscontrol/Roles.sol",
					"exportedSymbols": {
						"Roles": [
							293
						]
					},
					"id": 294,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 117,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title Roles\n@dev Library for managing addresses assigned to a Role.",
							"fullyImplemented": true,
							"id": 293,
							"linearizedBaseContracts": [
								293
							],
							"name": "Roles",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Roles.Role",
									"id": 122,
									"members": [
										{
											"constant": false,
											"id": 121,
											"name": "bearer",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "145:32:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 120,
												"keyType": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "154:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "145:25:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "165:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Role",
									"nodeType": "StructDefinition",
									"scope": 293,
									"src": "127:55:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "302:133:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "316:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "335:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "327:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "327:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "316:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4163636f756e7420697320302061646472657373",
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "339:22:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df28a80b02e8553031593ee00301e4e6453e11e48f1d5d06bacdab0ceeb4708c",
																"typeString": "literal_string \"Account is 0 address\""
															},
															"value": "Account is 0 address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df28a80b02e8553031593ee00301e4e6453e11e48f1d5d06bacdab0ceeb4708c",
																"typeString": "literal_string \"Account is 0 address\""
															}
														],
														"id": 129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															311,
															312
														],
														"referencedDeclaration": 312,
														"src": "308:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "308:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "308:54:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "376:19:1",
															"subExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 140,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 124,
																		"src": "381:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Role_$122_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 141,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 126,
																		"src": "387:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Role_$122_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 139,
																	"name": "has",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "377:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$122_storage_ptr_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																	}
																},
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "377:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															311,
															312
														],
														"referencedDeclaration": 311,
														"src": "368:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "368:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "368:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 146,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "403:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$122_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 149,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 121,
															"src": "403:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 150,
														"indexExpression": {
															"argumentTypes": null,
															"id": 148,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "415:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "403:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "426:4:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "403:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "403:27:1"
											}
										]
									},
									"documentation": "@dev give an account access to this role",
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "257:17:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$122_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"contractScope": null,
													"id": 123,
													"name": "Role",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 122,
													"src": "257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$122_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "276:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "276:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "256:36:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "302:0:1"
									},
									"scope": 293,
									"src": "244:191:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "562:109:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 163,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "576:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "595:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "587:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "587:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "576:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 162,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															311,
															312
														],
														"referencedDeclaration": 311,
														"src": "568:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "568:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "568:30:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 172,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "616:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Role_$122_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 173,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "622:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Role_$122_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 171,
																"name": "has",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "612:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$122_storage_ptr_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																}
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "612:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															311,
															312
														],
														"referencedDeclaration": 311,
														"src": "604:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "604:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "604:27:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 177,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "638:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$122_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 180,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 121,
															"src": "638:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 181,
														"indexExpression": {
															"argumentTypes": null,
															"id": 179,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "650:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "638:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "661:5:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "638:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "638:28:1"
											}
										]
									},
									"documentation": "@dev remove an account's access to this role",
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "517:17:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$122_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"contractScope": null,
													"id": 156,
													"name": "Role",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 122,
													"src": "517:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$122_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "536:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "536:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "516:36:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "562:0:1"
									},
									"scope": 293,
									"src": "501:170:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "841:74:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 196,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "855:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "874:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "866:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "866:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "855:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															311,
															312
														],
														"referencedDeclaration": 311,
														"src": "847:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "847:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "847:30:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 203,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "890:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$122_storage_ptr",
																"typeString": "struct Roles.Role storage pointer"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "bearer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 121,
														"src": "890:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 206,
													"indexExpression": {
														"argumentTypes": null,
														"id": 205,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "902:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "890:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 194,
												"id": 207,
												"nodeType": "Return",
												"src": "883:27:1"
											}
										]
									},
									"documentation": "@dev check if an account has this role\n@return bool",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "has",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "762:17:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$122_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"contractScope": null,
													"id": 187,
													"name": "Role",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 122,
													"src": "762:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$122_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "781:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "761:36:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "833:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "833:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "832:6:1"
									},
									"scope": 293,
									"src": "749:166:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "1016:384:1",
										"statements": [
											{
												"assignments": [
													218
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"name": "count",
														"nodeType": "VariableDeclaration",
														"scope": 291,
														"src": "1022:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 217,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1022:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 220,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1038:1:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1022:17:1"
											},
											{
												"body": {
													"id": 242,
													"nodeType": "Block",
													"src": "1079:69:1",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 231,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 211,
																		"src": "1091:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Role_$122_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		}
																	},
																	"id": 232,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "bearer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 121,
																	"src": "1091:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 236,
																"indexExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 234,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "1111:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1103:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1103:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1091:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 241,
															"nodeType": "IfStatement",
															"src": "1087:55:1",
															"trueBody": {
																"id": 240,
																"nodeType": "Block",
																"src": "1116:26:1",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "1126:7:1",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 237,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 218,
																				"src": "1126:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 239,
																		"nodeType": "ExpressionStatement",
																		"src": "1126:7:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 225,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "1065:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "323536",
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1069:3:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"value": "256"
													},
													"src": "1065:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 243,
												"initializationExpression": {
													"assignments": [
														222
													],
													"declarations": [
														{
															"constant": false,
															"id": 222,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 243,
															"src": "1050:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 221,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1050:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 224,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1062:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1050:13:1"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1074:3:1",
														"subExpression": {
															"argumentTypes": null,
															"id": 228,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "1074:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 230,
													"nodeType": "ExpressionStatement",
													"src": "1074:3:1"
												},
												"nodeType": "ForStatement",
												"src": "1045:103:1"
											},
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"name": "members",
														"nodeType": "VariableDeclaration",
														"scope": 291,
														"src": "1154:24:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 245,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1154:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 246,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "1154:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 251,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "1195:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1181:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 248,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1185:7:1",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 249,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "1185:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1181:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1154:47:1"
											},
											{
												"assignments": [
													255
												],
												"declarations": [
													{
														"constant": false,
														"id": 255,
														"name": "index",
														"nodeType": "VariableDeclaration",
														"scope": 291,
														"src": "1207:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 254,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1207:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 257,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1223:1:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1207:17:1"
											},
											{
												"body": {
													"id": 287,
													"nodeType": "Block",
													"src": "1267:108:1",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 268,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 211,
																		"src": "1279:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Role_$122_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		}
																	},
																	"id": 269,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "bearer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 121,
																	"src": "1279:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 273,
																"indexExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 271,
																			"name": "ix",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "1299:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1291:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1291:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1279:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 286,
															"nodeType": "IfStatement",
															"src": "1275:94:1",
															"trueBody": {
																"id": 285,
																"nodeType": "Block",
																"src": "1305:64:1",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 274,
																					"name": "members",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 247,
																					"src": "1315:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 276,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 275,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 255,
																					"src": "1323:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1315:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 278,
																						"name": "ix",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 259,
																						"src": "1340:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 277,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1332:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": "address"
																				},
																				"id": 279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1332:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"src": "1315:28:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 281,
																		"nodeType": "ExpressionStatement",
																		"src": "1315:28:1"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "1353:7:1",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 282,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 255,
																				"src": "1353:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 284,
																		"nodeType": "ExpressionStatement",
																		"src": "1353:7:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 262,
														"name": "ix",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "1251:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "323536",
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1256:3:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"value": "256"
													},
													"src": "1251:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 288,
												"initializationExpression": {
													"assignments": [
														259
													],
													"declarations": [
														{
															"constant": false,
															"id": 259,
															"name": "ix",
															"nodeType": "VariableDeclaration",
															"scope": 288,
															"src": "1235:10:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 258,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1235:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 261,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1248:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1235:14:1"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1261:4:1",
														"subExpression": {
															"argumentTypes": null,
															"id": 265,
															"name": "ix",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "1261:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 267,
													"nodeType": "ExpressionStatement",
													"src": "1261:4:1"
												},
												"nodeType": "ForStatement",
												"src": "1230:145:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 289,
													"name": "members",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 247,
													"src": "1388:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 216,
												"id": 290,
												"nodeType": "Return",
												"src": "1381:14:1"
											}
										]
									},
									"documentation": null,
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllMembers",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "942:17:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$122_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"contractScope": null,
													"id": 210,
													"name": "Role",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 122,
													"src": "942:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$122_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "941:19:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "996:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 213,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "996:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 214,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "996:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "995:18:1"
									},
									"scope": 293,
									"src": "919:481:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 294,
							"src": "109:1293:1"
						}
					],
					"src": "0:1402:1"
				},
				"id": 1
			}
		}
	}
}